services:
  fh-swifty-ui:
    build:
      context: .
      dockerfile: Dockerfile
      platforms:
        - linux/amd64
    image: fh-swifty-ui
    container_name: fh-swifty-ui
    ports:
      - "8000:8000"
    environment:
      - PYTHONUNBUFFERED=1
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=fh_swifty
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=password
      - QDRANT_HOST=qdrant
      - QDRANT_PORT=6333
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
    depends_on:
      - postgres
      - neo4j
      - qdrant
      - minio
    networks:
      - fh-swifty-network
    restart: always

  # PostgreSQL with PGVector extension for vector database
  postgres:
    image: pgvector/pgvector:pg16
    container_name: fh-swifty-postgres
    environment:
      - POSTGRES_DB=fh_swifty
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - fh-swifty-network
    restart: always

  # Neo4j Graph Database
  neo4j:
    image: neo4j:5.15-community
    container_name: fh-swifty-neo4j
    environment:
      - NEO4J_AUTH=neo4j/password
      - NEO4J_PLUGINS=["apoc"]
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_import:/var/lib/neo4j/import
      - neo4j_plugins:/plugins
    networks:
      - fh-swifty-network
    restart: always

  # Qdrant Vector Database (alternative to PGVector)
  qdrant:
    image: qdrant/qdrant:v1.7.4
    container_name: fh-swifty-qdrant
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_data:/qdrant/storage
    environment:
      - QDRANT__SERVICE__HTTP_PORT=6333
      - QDRANT__SERVICE__GRPC_PORT=6334
    networks:
      - fh-swifty-network
    restart: always

  # MinIO S3-compatible object storage
  minio:
    image: minio/minio:latest
    container_name: fh-swifty-minio
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    volumes:
      - minio_data:/data
    networks:
      - fh-swifty-network
    restart: always

  # MinIO Client for bucket management
  minio-client:
    image: minio/mc:latest
    container_name: fh-swifty-minio-client
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set myminio http://minio:9000 minioadmin minioadmin;
      /usr/bin/mc mb myminio/fh-swifty-bucket --ignore-existing;
      /usr/bin/mc policy set public myminio/fh-swifty-bucket;
      tail -f /dev/null
      "
    networks:
      - fh-swifty-network


volumes:
  postgres_data:
  neo4j_data:
  neo4j_logs:
  neo4j_import:
  neo4j_plugins:
  qdrant_data:
  minio_data:

networks:
  fh-swifty-network:
    driver: bridge
